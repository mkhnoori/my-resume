      - name: Deploy to EC2
        run: |
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_IP }} << 'EOF'
            # Pull latest code
            cd /home/ubuntu/my-resume && git pull origin main
            
            # Set up Nginx configuration
            sudo bash -c 'cat > /etc/nginx/sites-available/mkhnoori.net << EOF_NGINX
            server {
                listen 80;
                server_name mkhnoori.net www.mkhnoori.net;
                
                location / {
                    proxy_pass http://unix:/home/ubuntu/my-resume/myresume.sock:;
                    proxy_set_header Host \$host;
                    proxy_set_header X-Real-IP \$remote_addr;
                    proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto \$scheme;
                }

                location /static/ {
                    alias /home/ubuntu/my-resume/staticfiles/;
                }
            }
            EOF_NGINX'

            # Remove existing symlink if it exists, then create a new one
            sudo rm -f /etc/nginx/sites-enabled/mkhnoori.net
            sudo ln -s /etc/nginx/sites-available/mkhnoori.net /etc/nginx/sites-enabled/

            # Test and reload Nginx configuration
            sudo nginx -t  # Test the Nginx configuration
            sudo systemctl reload nginx  # Reload Nginx to apply the changes

            # Set up Gunicorn to run as a systemd service
            sudo bash -c 'cat > /etc/systemd/system/gunicorn.service << EOF_GUNICORN
            [Unit]
            Description=gunicorn daemon for Django project
            After=network.target

            [Service]
            User=ubuntu
            Group=ubuntu
            WorkingDirectory=/home/ubuntu/my-resume
            ExecStart=/home/ubuntu/my-resume/venv/bin/gunicorn --workers 3 --bind unix:/home/ubuntu/my-resume/resume.sock myresume.wsgi:application

            # Restart the service if it crashes
            Restart=always

            [Install]
            WantedBy=multi-user.target
            EOF_GUNICORN'

            # Reload systemd and enable Gunicorn to start on boot
            sudo systemctl daemon-reload
            sudo systemctl enable gunicorn
            sudo systemctl start gunicorn

            # Restart Nginx and Gunicorn services to ensure everything is running smoothly
            sudo systemctl restart gunicorn
            sudo systemctl restart nginx
          EOF
